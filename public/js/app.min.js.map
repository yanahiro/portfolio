{"version":3,"sources":["common.js","barba.js","canvasbase.js","streamlines.js"],"names":["window","addEventListener","document","querySelector","classList","remove","triggerEvent","element","event","createEvent","evt","initEvent","dispatchEvent","createEventObject","fireEvent","getStyleSheetValue","elem","prop","getComputedStyle","getPropertyValue","hm","gn","this","contains","add","AOS","init","duration","delay","Barba","Prefetch","PageTransition","BaseTransition","extend","start","Promise","all","newContainerLoading","loadOut","then","loadIn","bind","resolve","$","oldContainer","animate","opacity","promise","_this","$el","newContainer","scrollTop","hide","css","visibility","done","setTimeout","console","log","Pjax","getTransition","Dispatcher","on","currentStatus","oldStatus","container","newPageRawHTML","js","getElementsByTagName","jsCount","length","i","src","addJs","createElement","body","appendChild","eval","innerHTML","csObj","getElementById","width","height","setAttribute","stage","createjs","Stage","particleSystem","particlejs","ParticleSystem","handleTick","update","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","arr2","addChild","importFromJson","bgColor","emitFrequency","startX","startXVariance","startY","startYVariance","initialDirection","initialDirectionVariance","initialSpeed","initialSpeedVariance","friction","accelerationSpeed","accelerationDirection","startScale","startScaleVariance","finishScale","finishScaleVariance","lifeSpan","lifeSpanVariance","startAlpha","startAlphaVariance","finishAlpha","finishAlphaVariance","shapeIdList","startColor","hue","hueVariance","saturation","saturationVariance","luminance","luminanceVariance","blendMode","alphaCurveType","VERSION","Ticker","framerate","stageW","stageH","canvas","context","getContext","tick","requestAnimationFrame","draw","Date","now","time","clearRect","lineWidth","amplitude","keys","forEach","j","coefficient","beginPath","strokeStyle","x","px","py","y","noise","perlin2","moveTo","lineTo","stroke","resize","innerWidth","devicePixelRatio","innerHeight","seed","Math","random"],"mappings":"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","file":"app.min.js","sourcesContent":["\"use strict\";\n\n// 共通Script\n// 画面遷移時のfaadein / fadeout 機能\nwindow.addEventListener('load', function () {\n  var b = document.querySelector('body');\n  b.classList.remove('fadeout');\n}); // イベントトリガー（明示的にイベント発火）\n\nvar triggerEvent = function triggerEvent(element, event) {\n  if (document.createEvent) {\n    // IE以外\n    var evt = document.createEvent(\"HTMLEvents\");\n    evt.initEvent(event, true, true); // event type, bubbling, cancelable\n\n    return element.dispatchEvent(evt);\n  } else {\n    // IE\n    var evt = document.createEventObject();\n    return element.fireEvent(\"on\" + event, evt);\n  }\n}; // var toWorkDetailTransition = (function() {\n//   // work.html 画面遷移用Script\n//   // tableの行データを取得\n//   var targets = document.querySelectorAll('table tr.work-item');\n//   Array.from(targets).forEach(target => {\n//     target.addEventListener('click', function(element) {\n//       toWorkDetail(target);\n//     }, false);\n//   });\n//   function toWorkDetail(target) {\n//     // var tbody = this.parentNode;\n//     console.log(target);\n//     // console.log(element.getAttribute('tr-row'));\n//     // window.location.href = './work_detail.html'; // 通常の遷移\n//     Barba.Pjax.goTo('./work_detail.html')\n//   }\n// });\n// // barba用に呼び出しておく。\n// toWorkDetailTransition();\n// DOMのStyleで定義されている値を取得する。\n\n\nvar getStyleSheetValue = function getStyleSheetValue(elem, prop) {\n  if (!elem || !prop) {\n    return null;\n  }\n\n  var style = window.getComputedStyle(elem);\n  var value = style.getPropertyValue(prop);\n  return value;\n}; // スマホのハンバーガーメニューイベント\n\n\nvar hm = document.querySelector(\".menu-trigger\");\n\nif (hm) {\n  hm.addEventListener(\"click\", function () {\n    var gn = document.querySelector(\".globalnav\");\n\n    if (this.classList.contains(\"active\")) {\n      this.classList.remove(\"active\");\n      gn.classList.remove(\"active\");\n    } else {\n      this.classList.add(\"active\");\n      gn.classList.add(\"active\");\n    }\n  }, false);\n}\n\nAOS.init({\n  duration: 1000,\n  delay: 200\n});","\"use strict\";\n\n// ファイル読み込み\n// anime.js / barba.js\n// Barba.Pjax.start();\nBarba.Prefetch.init();\nvar PageTransition = Barba.BaseTransition.extend({\n  start: function start() {\n    Promise.all([this.newContainerLoading, this.loadOut()]).then(this.loadIn.bind(this));\n  },\n  loadOut: function loadOut(resolve) {\n    // anime.js版(調整要)\n    // var _this = this;\n    // return new Promise(function(resolve, reject) {\n    //     anime({\n    //         targets: _this.oldContainer,\n    //         opacity: 0,\n    //         // translateX: '-20vw',\n    //         transition: \"all .3s linear 0\"\n    //         // easing: \"easeOutBack\"\n    //         // easing: \"easeInOutQuart\"\n    //     });\n    //     setTimeout(function () {\n    //       resolve();\n    //     }, 700);\n    // })\n    return $(this.oldContainer).animate({\n      opacity: 0\n    }, 1000).promise();\n  },\n  loadIn: function loadIn() {\n    // anime.js版(調整要)\n    // var _this = this;\n    // console.log(_this.oldContainer);\n    // // 非表示\n    // _this.oldContainer.style.visibility=\"hidden\";\n    // // this.newContainer\n    // window.scrollTo(0, 0);\n    // anime({\n    //     targets: _this.newContainer,\n    //     opacity: 1,\n    //     transition: \"all .3s linear 0\"\n    //     // duration: 1000,\n    //     // translateY: ['80vw', 0],\n    //     // easing: 'easeInOutQuart'\n    // });\n    // _this.done();\n    // // $(this.oldContainer).hide();\n    // // 完了\n    // // setTimeout(function () {\n    // //   _this.done();\n    // // }, 500);\n    var _this = this;\n\n    var $el = $(this.newContainer);\n    $('html,body').animate({\n      scrollTop: 0\n    }, 1000, 'swing');\n    $(this.oldContainer).hide();\n    $el.css({\n      visibility: 'visible',\n      opacity: 0\n    });\n    $el.animate({\n      opacity: 1\n    }, 1000, function () {\n      /**\n       * 遷移が終了したら.done()を呼び出すのを忘れないでください！\n       * .done()は自動的にDOMから古いコンテナを削除します。\n       */\n      _this.done();\n\n      setTimeout(function () {\n        console.log(456); // AOS.refresh();\n\n        AOS.init({\n          duration: 1000,\n          delay: 200\n        });\n      }, 50);\n    });\n  }\n});\n\nBarba.Pjax.getTransition = function () {\n  return PageTransition;\n};\n\nBarba.Pjax.start(); // jsの再読込処理\n\nBarba.Dispatcher.on('newPageReady', function (currentStatus, oldStatus, container, newPageRawHTML) {\n  var js = container.getElementsByTagName(\"script\");\n\n  if (js != null) {\n    var jsCount = js.length;\n\n    for (var i = 0; i < jsCount; i += 1) {\n      if (js[i].src !== '') {\n        var addJs = document.createElement(\"script\");\n        addJs.src = js[i].src;\n        document.body.appendChild(addJs);\n      } else {\n        eval(js[i].innerHTML);\n      }\n    }\n  } // work.html 画面遷移用Script\n  // tableの行データを取得\n  // toWorkDetailTransition();\n\n\n  var hm = document.querySelector(\".menu-trigger\");\n  var gn = document.querySelector(\".globalnav\");\n  hm.classList.remove(\"active\");\n  gn.classList.remove(\"active\"); // setTimeout(function() {\n  //   console.log(456);\n  //   AOS.refresh();\n  //   // AOS.init({\n  //   //   duration: 1000,\n  //   //   delay: 200\n  //   // });\n  // }, 1500);\n  // loadEvent実行\n  // triggerEvent(document.body, 'load');\n  // var js = container.getElementsByTagName(\"script\");\n  // console.log(js);\n  // var script = document.createElement('script');\n  // script.src = 'js/app.min.js';\n  // document.body.appendChild(script);\n  // var targets = document.querySelectorAll('table tr.work-item');\n  // Array.from(targets).forEach(target => {\n  //   target.addEventListener('click', sample, false);\n  // });\n  // function sample() {\n  //   // var tbody = this.parentNode;\n  //   // console.log(this.getAttribute('tr-row'));\n  //   // window.location.href = './work_detail.html'; // 通常の遷移\n  //   Barba.Pjax.goTo('./work_detail.html')\n  // }\n});","\"use strict\";\n\n//canvasサイズを指定する\nvar csObj = document.getElementById(\"canvasbase\");\nvar width = getStyleSheetValue(csObj, 'width');\nvar height = getStyleSheetValue(csObj, 'height');\ncsObj.setAttribute('width', width);\ncsObj.setAttribute('height', height); // Stageオブジェクトを作成します。表示リストのルートになります。\n\nvar stage = new createjs.Stage(\"canvasbase\"); // パーティクルシステム作成します。\n\nvar particleSystem = new particlejs.ParticleSystem(); // パーティクルシステムの描画コンテナーを表示リストに登録します。\n\nstage.addChild(particleSystem.container); // Particle Developから保存したパラメーターを反映します。\n// https://ics-creative.github.io/project-particle-develop/\n\nparticleSystem.importFromJson({\n  \"bgColor\": \"#00000\",\n  \"width\": 1024,\n  \"height\": 575,\n  \"emitFrequency\": 40,\n  \"startX\": 800,\n  \"startXVariance\": 1920,\n  \"startY\": 255,\n  \"startYVariance\": 1280,\n  \"initialDirection\": \"0\",\n  \"initialDirectionVariance\": \"360\",\n  \"initialSpeed\": 1,\n  \"initialSpeedVariance\": \"3.7\",\n  \"friction\": 0.11,\n  \"accelerationSpeed\": 0.1,\n  \"accelerationDirection\": \"273.3\",\n  \"startScale\": \"0.76\",\n  \"startScaleVariance\": \"1\",\n  \"finishScale\": 0.09,\n  \"finishScaleVariance\": 0.14,\n  \"lifeSpan\": 200,\n  \"lifeSpanVariance\": 200,\n  \"startAlpha\": 0.3,\n  \"startAlphaVariance\": 0.47,\n  \"finishAlpha\": 0.15,\n  \"finishAlphaVariance\": 0.5,\n  \"shapeIdList\": [\"blur_circle\", \"circle\"],\n  \"startColor\": {\n    \"hue\": 125,\n    \"hueVariance\": 209,\n    \"saturation\": 79,\n    \"saturationVariance\": 5,\n    \"luminance\": 85,\n    \"luminanceVariance\": 48\n  },\n  \"blendMode\": true,\n  \"alphaCurveType\": \"1\",\n  \"VERSION\": \"1.0.0\"\n}); // フレームレートの設定\n\ncreatejs.Ticker.framerate = 60; // 定期的に呼ばれる関数を登録\n\ncreatejs.Ticker.on(\"tick\", handleTick);\n\nfunction handleTick() {\n  // パーティクルの発生・更新\n  particleSystem.update(); // 描画を更新する\n\n  stage.update();\n}","\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar stageW = 0; // 画面の幅\n\nvar stageH = 0; // 画面の高さ\n// canvas要素の参照を取得\n\nvar canvas = document.querySelector('canvas.streamline'); // 2Dの描画命令群を取得\n\nvar context = canvas.getContext('2d');\nnoise.seed(Math.random());\nresize();\ntick();\nwindow.addEventListener('resize', resize); // エンターフレームのタイミング\n\nfunction tick() {\n  requestAnimationFrame(tick);\n  var time = Date.now() / 3000;\n  draw(time);\n} // 描画\n\n\nfunction draw(time) {\n  // 画面をリセット\n  context.clearRect(0, 0, stageW, stageH);\n  context.lineWidth = 1;\n  var amplitude = stageH / 3; // 振幅（縦幅)の大きさ\n\n  var lineNum = 200; // ラインの数\n\n  var segmentNum = 100; // 分割数\n\n  _toConsumableArray(new Array(lineNum).keys()).forEach(function (j) {\n    var coefficient = 50 + j;\n    context.beginPath(); // context.strokeStyle = `white`;\n    // context.strokeStyle = 'rgb(155, 187, 89)';\n\n    context.strokeStyle = '#3DFF3D'; // context.strokeStyle = '#00FC00';\n    // const h = Math.round(j / lineNum * 220); // 色相\n    // const s = 100; // 彩度\n    // const l = Math.round(j / lineNum * 100); // 明度\n    // // 色を指定\n    // context.strokeStyle = `hsl(${h}, ${s}%, ${l}%)`;\n\n    _toConsumableArray(new Array(segmentNum).keys()).forEach(function (i) {\n      var x = i / (segmentNum - 1) * stageW;\n      var px = i / coefficient;\n      var py = j / 50 + time;\n      var y = amplitude * noise.perlin2(px, py) + stageH / 2;\n\n      if (i === 0) {\n        context.moveTo(x, y);\n      } else {\n        context.lineTo(x, y);\n      }\n    });\n\n    context.stroke();\n  });\n} // リサイズイベント\n\n\nfunction resize() {\n  stageW = innerWidth * devicePixelRatio;\n  stageH = innerHeight * devicePixelRatio;\n  canvas.width = stageW;\n  canvas.height = stageH;\n}"]}